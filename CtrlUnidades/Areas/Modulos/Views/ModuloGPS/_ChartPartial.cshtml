@{
    Layout = null;
}

<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@5.4.2/dist/echarts.min.js"></script>

<div id="chart" style="width: 1000px;height:400px;"></div>

<script type="text/javascript">
    var myChart = echarts.init(document.getElementById('chart'));

    var option = {
        title: {
            text: 'Monitor de temperatura a lo largo del viaje',
            subtext: 'Viaje #Nombre-XXXXX'
        },
        tooltip: {
            trigger: 'axis',
            axisPointer: {
                type: 'cross'
            }
        },
        toolbox: {
            show: true,
            feature: {
                saveAsImage: {}
            }
        },
        xAxis: {
            type: 'category',
            boundaryGap: false,
            // prettier-ignore
            data: ['00:00', '01:15', '02:30', '03:45', '05:00', '06:15', '07:30', '08:45', '10:00', '11:15', '12:30', '13:45', '15:00', '16:15', '17:30', '18:45', '20:00', '21:15', '22:30', '23:45']
        },
        yAxis: {
            type: 'value',
            axisLabel: {
                formatter: '{value} °C'
            },
            axisPointer: {
                snap: true
            }
        },
        visualMap: {
            show: false,
            dimension: 0,
            pieces: [
                {
                    lte: 6,
                    color: 'green'
                },
                {
                    gt: 6,
                    lte: 8,
                    color: 'red'
                },
                {
                    gt: 8,
                    lte: 14,
                    color: 'green'
                },
                {
                    gt: 14,
                    lte: 17,
                    color: 'red'
                },
                {
                    gt: 17,
                    color: 'green'
                }
            ]
        },
        dataZoom: [
            {
                type: 'inside',
                start: 100,
                end: 0
            },
            {
                start: 100,
                end: 0
            }
        ],
        series: [
            {
                name: 'Electricity',
                type: 'line',
                smooth: true,
                // prettier-ignore
                data: [300, 280, 250, 260, 270, 300, 550, 500, 400, 390, 380, 390, 400, 500, 600, 750, 800, 700, 600, 400],
                markArea: {
                    itemStyle: {
                        color: 'rgba(255, 173, 177, 0.4)'
                    },
                    data: [
                        [
                            {
                                name: 'Desconectado',
                                xAxis: '07:30'
                            },
                            {
                                xAxis: '10:00'
                            }
                        ],
                        [
                            {
                                name: 'Desconectado',
                                xAxis: '17:30'
                            },
                            {
                                xAxis: '21:15'
                            }
                        ]
                    ]
                }
            }
        ]
    };

    myChart.setOption(option);

    window.addEventListener('resize', myChart.resize);
</script>

@*(((((((((((((((((((((((/////////////////////////////////////////////////////////////////////)))))))))))))))))))))))*@

@*<div>
    <canvas id="myChart" width="auto" height="100px"> </canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>

    //SETUP Block**********************************************************

var Tempdata = [{
        //x: 'Item 1',
        y: 10,
        id: 'test-10'
    },
    {
        //x: 'Item 2',
        y: 30,
        id: 'test-20'
    },
    {
        //x: 'Item 3',
        y: 50,
        id: 'test-30'
    },
    {
        //x: 'Item 4',
        y: 20,
        id: 'test-40'
    },
    {
        //x: 'Item 5',
        y: 25,
        id: 'test-50'
    },
    {
        //x: 'Item 5',
        y: 44,
        id: 'test-60'
    },
    {
        //x: 'Item 6',
        y: -10,
        id: 'test-70'
    }];

    const DATA_COUNT = 7;
    const NUMBER_CFG = { count: DATA_COUNT, min: 0, max: 100 };

    const labels = ['24/03/2023', '24/03/2023', '24/03/2023', '24/03/2023', '24/03/2023', '24/03/2023', '24/03/2023'];
    const data = {
        labels: labels,
        datasets: [
            {
                label: 'TEMPERATURA',
                data: [10, 30, 0, 20, 25, 44, 30],
                borderColor: 'rgb(255, 99, 132)',
                backgroundColor: 'rgb(255, 99, 132)',
                fill:false
            },
            {
                label: 'DISPOSITIVO',
                data: ['ON', 'ON', 'OFF', 'ON', 'OFF', 'OFF', 'ON'],
                borderColor: 'rgb(54, 162, 235)',
                backgroundColor: 'rgb(54, 162, 235)',
                stepped: true,
                yAxisID: 'y2',
            }
        ]
    };

    //CONFIG Block*********************************************************

 
    const config = {
        type: 'line',
        data: data,
        options: {
            responsive: true,
            plugins: {
                title: {
                    display: false,
                    text: 'TEMPERATURAS REGISTRADAS',
                },
            },
            scales: {
                y: {
                    type: 'linear',
                    position: 'left',
                    stack: 'demo',
                    stackWeight: 2,
                    border: {
                        color: 'rgb(255, 99, 132)'
                    }
                },
                y2: {
                    type: 'category',
                    labels: ['ON', 'OFF'],
                    offset: true,
                    position: 'left',
                    stack: 'demo',
                    stackWeight: 1,
                    border: {
                        color: 'rgb(54, 162, 235)'
                    }
                },
            },
            onClick: (event, elements, chart) => {
                if (elements[0]) {
                    const i = elements[0].index;
                    alert(chart.data.labels[i] + ': ' + chart.data.datasets[0].data[i]);
                }
            }
        },
    };

    // render Block *******************************************************

    const myChart = new Chart(
        document.getElementById('myChart'),
        config
    );

    //Which Line and DataPoint has Been Clicked

    function clickHandler(click){ 
        const points = myChart.getElementsAtEventForMode(click, 'nearest', {
            intersect: true }, true);

        if(points[0]) {
            console.log(points.length)

            points.forEach((line) => {
                const dataset = line.datasetIndex;
                const datapoint = line.index;

                console.log(`I clicked on LINE: ${myChart.data.datasets[dataset].label} with INDEX number of: ${datapoint}`)
            })
        }
    }

    myChart.canvas.onclick = clickHandler;*@

@*    //var ctx = document.getElementById('myChart').getContext('2d');
    //const myChar = new Chart(ctx, {
    //        type: 'line',
    //        data: {
    //            labels: labels,
    //            datasets: [
    //                {
    //                    label: 'Dataset 1',
    //                    data: [10, 30, 50, 20, 25, 44, -10],
    //                    borderColor: Utils.CHART_COLORS.red,
    //                    backgroundColor: Utils.CHART_COLORS.red,
    //                },
    //                {
    //                    label: 'Dataset 2',
    //                    data: ['ON', 'ON', 'OFF', 'ON', 'OFF', 'OFF', 'ON'],
    //                    borderColor: Utils.CHART_COLORS.blue,
    //                    backgroundColor: Utils.CHART_COLORS.blue,
    //                    stepped: true,
    //                    yAxisID: 'y2',
    //                }
    //            ]
    //        }
    //        options: {
    //            responsive: true,
    //            plugins: {
    //                title: {
    //                    display: true,
    //                    text: 'Stacked scales',
    //                },
    //            },
    //            scales: {
    //                y: {
    //                    type: 'linear',
    //                    position: 'left',
    //                    stack: 'demo',
    //                    stackWeight: 2,
    //                    border: {
    //                        color: Utils.CHART_COLORS.red
    //                    }
    //                },
    //                y2: {
    //                    type: 'category',
    //                    labels: ['ON', 'OFF'],
    //                    offset: true,
    //                    position: 'left',
    //                    stack: 'demo',
    //                    stackWeight: 1,
    //                    border: {
    //                        color: Utils.CHART_COLORS.blue
    //                    }
    //                }
    //            }
    //        },
    //};*@


@*</script>*@
