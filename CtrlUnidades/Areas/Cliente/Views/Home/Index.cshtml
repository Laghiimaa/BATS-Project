@{
    //Layout = null;
}
@*Barra de herramientas*@

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] INICIO </title>


    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    @*<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>*@

    <script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@5.4.2/dist/echarts.min.js"></script>

</head>

<body>
    <partial name="_LoginPartial" />

    <div class="container-fluid mt-3">
        <div class="row">
            <div class="col-sm-12">
                <div class="card mb-3">
                    <div class="card-body">
                        <h5 class="card-title">GRÁFICA 1</h5>
                        <!-- <p class="card-text">Este es un ejemplo de encabezado que cubre el mismo ancho de dos columnas en Bootstrap.</p> -->
                        <div id="chart" style="width: auto;height:350px;"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="card mb-3">
                            <div class="card-body">
                                <h5 class="card-title">CASOS</h5>
                                <!-- <p class="card-text">Este es un ejemplo de contenedor responsivo en Bootstrap</p> -->
                                <div id="chart1" style="width: auto;height:300px;"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12" hidden>
                        <div class="card mb-3">
                            <div class="card-body">
                                <h5 class="card-title">GRÁFICA 2</h5>
                                <!-- <p class="card-text">Este es un ejemplo de contenedor responsivo en Bootstrap</p> -->
                                <div id="chart2" style="width: auto;height:360px;"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="card mb-3">
                            <div class="card-body">
                                <h5 class="card-title">USUARIOS ACTIVOS POR CIUDAD - SEMANAL</h5>
                                <!-- <p class="card-text">Este es un ejemplo de contenedor responsivo en Bootstrap</p> -->
                                <div id="chart3" style="width: auto;height:300px;"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6" hidden>
                        <div class="card mb-3">
                            <div class="card-body">
                                <h5 class="card-title">Contenedor 4</h5>
                                <!-- <p class="card-text">Este es un ejemplo de contenedor responsivo en Bootstrap</p> -->
                                <div id="chart4" style="width: 1000px auto;height:360px;"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6" hidden>
                        <div class="card mb-3">
                            <div class="card-body">
                                <h5 class="card-title">Contenedor 5</h5>
                                <!-- <p class="card-text">Este es un ejemplo de contenedor responsivo en Bootstrap</p>-->
                                <div id="chart5" style="width: 1000px auto;height:360px;"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


</body>

<script>

    var myChart = echarts.init(document.getElementById('chart'));

    let base = +new Date(2016, 9, 3);
    let oneDay = 24 * 3600 * 1000;
    let valueBase = Math.random() * 300;
    let valueBase2 = Math.random() * 50;
    let data = [];
    let data2 = [];
    for (var i = 1; i < 10; i++) {
        var now = new Date((base += oneDay));
        var dayStr = [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('-');
        valueBase = Math.round((Math.random() - 0.5) * 20 + valueBase);
        valueBase <= 0 && (valueBase = Math.random() * 300);
        data.push([dayStr, valueBase]);
        valueBase2 = Math.round((Math.random() - 0.5) * 20 + valueBase2);
        valueBase2 <= 0 && (valueBase2 = Math.random() * 50);
        data2.push([dayStr, valueBase2]);
    }
    option = {
        tooltip: {
            triggerOn: 'none',
            position: function (pt) {
                return [pt[0], 130];
            }
        },
        legend: {
            top: 'bottom',
            data: ['Intention']
        },
        toolbox: {
            left: 'center',
            itemSize: 25,
            top: 55,
            feature: {
                dataZoom: {
                    yAxisIndex: 'none'
                },
                restore: {}
            }
        },
        xAxis: {
            type: 'time',
            axisPointer: {
                value: '2016-10-7',
                snap: true,
                lineStyle: {
                    color: '#7581BD',
                    width: 2
                },
                label: {
                    show: true,
                    formatter: function (params) {
                        return echarts.format.formatTime('yyyy-MM-dd', params.value);
                    },
                    backgroundColor: '#7581BD'
                },
                handle: {
                    show: true,
                    color: '#7581BD'
                }
            },
            splitLine: {
                show: false
            }
        },
        yAxis: {
            type: 'value',
            axisTick: {
                inside: true
            },
            splitLine: {
                show: false
            },
            axisLabel: {
                inside: true,
                formatter: '{value}\n'
            },
            z: 10
        },
        grid: {
            top: 110,
            left: 15,
            right: 15,
            height: 160
        },
        dataZoom: [
            {
                type: 'inside',
                throttle: 50
            }
        ],
        series: [
            {
                name: 'Fake Data',
                type: 'line',
                smooth: true,
                symbol: 'circle',
                symbolSize: 5,
                sampling: 'average',
                itemStyle: {
                    color: '#0770FF'
                },
                stack: 'a',
                areaStyle: {
                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                        {
                            offset: 0,
                            color: 'rgba(58,77,233,0.8)'
                        },
                        {
                            offset: 1,
                            color: 'rgba(58,77,233,0.3)'
                        }
                    ])
                },
                data: data
            },
            {
                name: 'Fake Data',
                type: 'line',
                smooth: true,
                stack: 'a',
                symbol: 'circle',
                symbolSize: 5,
                sampling: 'average',
                itemStyle: {
                    color: '#F2597F'
                },
                areaStyle: {
                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                        {
                            offset: 0,
                            color: 'rgba(213,72,120,0.8)'
                        },
                        {
                            offset: 1,
                            color: 'rgba(213,72,120,0.3)'
                        }
                    ])
                },
                data: data2
            }
        ]
    };

    myChart.setOption(option);

    window.addEventListener('resize', myChart.resize);

    //--------------------------------------------------------------

    var myChart = echarts.init(document.getElementById('chart1'));

    option = {
        tooltip: {
            trigger: 'item',
            formatter: '{a} <br />{b}: {c} ({d}%)'
        },
        legend: {
            data: [
                'Agresión',                
                'Acoso',
                'Intimidación',                       
                'Otros',                                             
            ]
        },
        series: [
            {
                name: 'Access From',
                type: 'pie',
                selectedMode: 'single',
                radius: [0, '30%'],
                label: {
                    position: 'inner',
                    fontSize: 14
                },
                labelLine: {
                    show: false
                },
                data: [
                    { value: 1548, name: 'Mujeres' },                    
                    { value: 679, name: 'Hombres', selected: true }
                ]
            },
            {
                name: 'Access From',
                type: 'pie',
                radius: ['45%', '60%'],
                labelLine: {
                    length: 30
                },
                label: {
                    formatter: '{a|{a}}{abg|}\n{hr|}\n  {b|{b}：}{c}  {per|{d}%}  ',
                    backgroundColor: '#F6F8FC',
                    borderColor: '#8C8D8E',
                    borderWidth: 1,
                    borderRadius: 4,
                    rich: {
                        a: {
                            color: '#6E7079',
                            lineHeight: 22,
                            align: 'center'
                        },
                        hr: {
                            borderColor: '#8C8D8E',
                            width: '100%',
                            borderWidth: 1,
                            height: 0
                        },
                        b: {
                            color: '#4C5058',
                            fontSize: 14,
                            fontWeight: 'bold',
                            lineHeight: 33
                        },
                        per: {
                            color: '#fff',
                            backgroundColor: '#4C5058',
                            padding: [3, 4],
                            borderRadius: 4
                        }
                    }
                },
                data: [
                    { value: 1048, name: 'Agresión' },
                    { value: 335, name: 'Acoso' },
                    { value: 310, name: 'Otros' },                                                                            
                ]
            }
        ]
    };

    myChart.setOption(option);

    window.addEventListener('resize', myChart.resize);

    //--------------------------------------------------------------

    var myChart = echarts.init(document.getElementById('chart2'));

    var option = {
        tooltip: {
            trigger: 'axis',
            axisPointer: {
                type: 'cross'
            }
        },
        toolbox: {
            show: true,
            feature: {
                saveAsImage: {}
            }
        },
        xAxis: {
            type: 'category',
            boundaryGap: false,
            // prettier-ignore
            data: ['00:00', '01:15', '02:30', '03:45', '05:00', '06:15', '07:30', '08:45', '10:00', '11:15', '12:30', '13:45', '15:00', '16:15', '17:30', '18:45', '20:00', '21:15', '22:30', '23:45']
        },
        yAxis: {
            type: 'value',
            axisLabel: {
                formatter: '{value} °C'
            },
            axisPointer: {
                snap: true
            }
        },
        visualMap: {
            show: false,
            dimension: 0,
            pieces: [
                {
                    lte: 6,
                    color: 'green'
                },
                {
                    gt: 6,
                    lte: 8,
                    color: 'red'
                },
                {
                    gt: 8,
                    lte: 14,
                    color: 'green'
                },
                {
                    gt: 14,
                    lte: 17,
                    color: 'red'
                },
                {
                    gt: 17,
                    color: 'green'
                }
            ]
        },
        dataZoom: [
            {
                type: 'inside',
                start: 100,
                end: 0
            },
            {
                start: 100,
                end: 0
            }
        ],
        series: [
            {
                name: 'Electricity',
                type: 'line',
                smooth: true,
                // prettier-ignore
                data: [300, 280, 250, 260, 270, 300, 550, 500, 400, 390, 380, 390, 400, 500, 600, 750, 800, 700, 600, 400],
                markArea: {
                    itemStyle: {
                        color: 'rgba(255, 173, 177, 0.4)'
                    },
                    data: [
                        [
                            {
                                name: 'Desconectado',
                                xAxis: '07:30'
                            },
                            {
                                xAxis: '10:00'
                            }
                        ],
                        [
                            {
                                name: 'Desconectado',
                                xAxis: '17:30'
                            },
                            {
                                xAxis: '21:15'
                            }
                        ]
                    ]
                }
            }
        ]
    };

    myChart.setOption(option);

    window.addEventListener('resize', myChart.resize);

    //--------------------------------------------------------------

    var myChart = echarts.init(document.getElementById('chart3'));

    option = {
        tooltip: {
            trigger: 'axis',
            axisPointer: {
                // Use axis to trigger tooltip
                type: 'shadow' // 'shadow' as default; can also be 'line' or 'shadow'
            }
        },
        legend: {},
        grid: {
            left: '3%',
            right: '4%',
            bottom: '3%',
            containLabel: true
        },
        xAxis: {
            type: 'value'
        },
        yAxis: {
            type: 'category',
            data: ['Lun', 'Mar', 'Mie', 'Jue', 'Vie', 'Sab', 'Dom']
        },
        series: [
            {
                name: 'San Juan del Río',
                type: 'bar',
                stack: 'total',
                label: {
                    show: true
                },
                emphasis: {
                    focus: 'series'
                },
                data: [320, 302, 301, 334, 390, 330, 320]
            },
            {
                name: 'Nuevo León',
                type: 'bar',
                stack: 'total',
                label: {
                    show: true
                },
                emphasis: {
                    focus: 'series'
                },
                data: [120, 132, 101, 134, 90, 230, 210]
            },
            {
                name: 'CDMX',
                type: 'bar',
                stack: 'total',
                label: {
                    show: true
                },
                emphasis: {
                    focus: 'series'
                },
                data: [220, 182, 191, 234, 290, 330, 310]
            },
            {
                name: 'San Luis Potosí',
                type: 'bar',
                stack: 'total',
                label: {
                    show: true
                },
                emphasis: {
                    focus: 'series'
                },
                data: [150, 212, 201, 154, 190, 330, 410]
            },
            {
                name: 'Querétaro',
                type: 'bar',
                stack: 'total',
                label: {
                    show: true
                },
                emphasis: {
                    focus: 'series'
                },
                data: [820, 832, 901, 934, 1290, 1330, 1320]
            }
        ]
    };

    myChart.setOption(option);

    window.addEventListener('resize', myChart.resize);

    //--------------------------------------------------------------

    var myChart = echarts.init(document.getElementById('chart4'));

    option = {
        tooltip: {
            trigger: 'item'
        },
        legend: {
            left: 'center'
        },
        series: [
            {
                name: 'Access From',
                type: 'pie',
                radius: '60%',
                data: [
                    { value: 1048, name: 'Search Engine' },
                    { value: 735, name: 'Direct' },
                    { value: 580, name: 'Email' },
                    { value: 484, name: 'Union Ads' },
                    { value: 300, name: 'Video Ads' }
                ],
                emphasis: {
                    itemStyle: {
                        shadowBlur: 10,
                        shadowOffsetX: 0,
                        shadowColor: 'rgba(0, 0, 0, 0.5)'
                    }
                }
            }
        ]
    };

    myChart.setOption(option);

    window.addEventListener('resize', myChart.resize);

    //--------------------------------------------------------------

    var myChart = echarts.init(document.getElementById('chart5'));

    option = {
        tooltip: {
            trigger: 'item'
        },
        legend: {
            left: 'center',
            // doesn't perfectly work with our tricks, disable it
            selectedMode: false

        },
        series: [
            {
                name: 'Access From',
                type: 'pie',
                radius: ['40%', '70%'],
                center: ['50%', '70%'],
                // adjust the start angle
                startAngle: 180,
                label: {
                    show: true,
                    formatter(param) {
                        // correct the percentage
                        return param.name + ' (' + param.percent * 2 + '%)';
                    }
                },
                data: [
                    { value: 1048, name: 'Search Engine' },
                    { value: 735, name: 'Direct' },
                    { value: 580, name: 'Email' },
                    { value: 484, name: 'Union Ads' },
                    { value: 300, name: 'Video Ads' },
                    {
                        // make an record to fill the bottom 50%
                        value: 1048 + 735 + 580 + 484 + 300,
                        itemStyle: {
                            // stop the chart from rendering this piece
                            color: 'none',
                            decal: {
                                symbol: 'none'
                            }
                        },
                        label: {
                            show: false
                        }
                    }
                ]
            }
        ]
    };

    myChart.setOption(option);

    window.addEventListener('resize', myChart.resize);

</script>


</html>